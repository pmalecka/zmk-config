/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

#include "pwmacro.dtsi"

#if (__has_include("pwmacro.dtsi") && !defined(NO_SECRETS))
#include "secrets.dtsi"
#endif

#define TAPPING_TERM_MS 200 // how long a key must be pressed to trigger hold behavior.

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};
 */

&lt {
    tapping-term-ms = <TAPPING_TERM_MS>;
};

&mt {
    tapping-term-ms = <TAPPING_TERM_MS>;
};

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};

#define F_TERM LC(GRAVE) // hotkey for terminal in vscode
#define PT_RUN LA(LS(LG(LC(R)))) // powertoys run
#define PT_TERM LA(LS(LG(LC(B)))) // boss key for terminal
#define BW_BOSS LA(LS(LG(LC(P)))) // boss key for bitwarden
#define SX_PRSC LS(PSCRN) // sharex printscreen

/ {
    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        td_scln: td_semicolon_or_colon {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM_MS>;
            bindings = <&kp SEMI>, <&kp COLON>;
        };

        td_lbkt: td_left_bracket_or_parenthesis {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM_MS>;
            bindings = <&kp LBKT>, <&kp LPAR>;
        };

        td_rbkt: td_right_bracket_or_parenthesis {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM_MS>;
            bindings = <&kp RBKT>, <&kp RPAR>;
        };
    };

    macros {
        samplem: samplem {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp Z &kp M &kp K>
                , <&macro_release &kp LSHFT>
                ;
        };

        #include "version.dtsi"
        #ifndef VERSION_MACRO
        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };
        #endif
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// | GRESC |  1  |  2  |  3   |  4   |  5   |                       |  6  |  7  |  8   |  9   |   0   |   -        |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                       |  Y  |  U  |  I   |  O   |   P   |   =        |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                       |  H  |  J  |  K   |  L   |   ;   | LCTRL or ' |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   VOL    |  | SCROLL  |  N  |  M  |  ,   |  .   |   /   | LSHFT or \ |
//               | none| none | LALT | SPACT|LOWER/BSP |  |RAISE/DEL| RET | GUI | none | none |
            bindings = <
&gresc    &kp N1 &kp N2    &kp N3   &kp N4   &kp N5                     &kp N6   &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
&kp TAB   &kp Q  &kp W     &kp E    &kp R    &kp T                      &kp Y    &kp U    &kp I     &kp O    &kp P    &kp EQUAL
&kp LCTRL &kp A  &kp S     &kp D    &kp F    &kp G                      &kp H    &kp J    &kp K     &kp L    &td_scln &mt RCTRL SQT
&kp LSHFT &kp Z  &kp X     &kp C    &kp V    &kp B    &none       &none &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH &mt RSHFT BSLH
                 &none     &none    &kp LALT &kp SPACE &lt 1 BSPC &lt 2 DEL   &kp RET  &kp RGUI &none     &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |F_TERM| F1  | F2  |  F3   |  F4   |  F5   |                   |  F6  |  F7  |  F8  | F9  | F10 | F11 |
// |      |     |SCRT2| SCRT3 |PT_RUN |PT_TERM|                   |      | HOME |  UP  |PG_UP| F11 | F12 |
// |      |VOLD |VOLU |BW_BOSS|SX_PRSC|   [   |                   |      | LEFT | DOWN |RIGHT|     |     |
// |      |LEFT |DOWN |  UP   | RIGHT |   {   |      |     |      |  }   | END  |      |PG_DN|     |     |
//              |     |       |       |       |      |     |      |      |      |      |     |
            bindings = <
&kp F_TERM &kp F1           &kp F2            &kp F3            &kp F4       &kp F5                       &kp F6   &kp F7   &kp F8   &kp F9    &kp F10 &kp F11
&trans     &trans           &pw2              &pw3              &kp PT_RUN   &kp PT_TERM                  &trans   &kp HOME &kp UP   &kp PG_UP &trans  &trans
&trans     &kp C_VOL_DN     &kp C_VOL_UP      &kp BW_BOSS       &kp SX_PRSC  &td_lbkt                     &td_rbkt &kp LEFT &kp DOWN &kp RIGHT &trans  &trans
&trans     &kp LEFT         &kp DOWN          &kp UP            &kp RIGHT    &kp LBRC  &trans   &trans    &kp RBRC &kp END  &trans   &kp PG_DN &trans  &trans
                            &trans            &trans            &trans       &trans    &trans   &kp DEL   &trans   &trans   &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |   `  |  !         |  @         |  #         |  $        |  %       |                 |  ^      |  &      |  *     |  (      |   )     |   _      |
// |BTCLR |  BT1       |  BT2       |  BT3       | BT4       | BT5      |                 |         |         |        |         |         |          |
// |      |            |            |            |           |          |                 |         |         |        |         |         |          |
// |      |            |            |            |           |          |        | |      |         |         |        |         |         |          |
//                     |            |            |           |          |        | |      |         |         |        |         |
            bindings = <
&kp GRAVE  &kp EXCL     &kp AT       &kp HASH     &kp DOLLAR   &kp PRCNT                   &kp CARET       &kp AMPS          &kp STAR          &kp LPAR             &kp RPAR   &kp UNDER
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                &trans          &trans            &trans            &trans               &trans     &trans
&trans     &trans       &trans       &trans       &trans       &trans                      &rgb_ug RGB_TOG &trans            &trans            &trans               &trans     &trans
&trans     &trans       &trans       &trans       &trans       &trans    &trans    &trans  &rgb_ug RGB_EFF &ext_power EP_ON  &ext_power EP_OFF &ext_power EP_TOG    &macro_ver &trans
                        &trans       &trans       &trans       &trans    &kp BSPC  &trans  &trans          &trans            &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};

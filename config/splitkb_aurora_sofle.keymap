/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#include "pwmacro.dtsi"

#if (__has_include("pwmacro.dtsi") && !defined(NO_SECRETS))
#include "secrets.dtsi"
#endif

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};
 */

&lt {
    tapping-term-ms = <180>;
};

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};

#define F_TERM &kp LC(GRAVE)
#define PT_RUN &kp LA(LS(LG(LC(R))))
#define PT_TERM &kp LA(LS(LG(LC(B))))
#define BW_BOSS &kp LA(LS(LG(LC(P))))
#define SX_PRSC &kp LS(PSCRN)

/ {
    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
    };

    macros {
        samplem: samplem {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp Z &kp M &kp K>
                , <&macro_release &kp LSHFT>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// | GRESC |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7   |  8    |  9   |   0   |   -   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U   |  I    |  O   |   P   |   =   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J   |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M   |  ,    |  .   |   /   | SHIFT |
//               |CTRL | ALT  | GUI  | LOWER|  SPACE |  | RAISE | BSPC | RET  | GUI   | ___ |
            bindings = <
&gresc    &kp N1 &kp N2    &kp N3   &kp N4   &kp N5                     &kp N6   &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
&kp TAB   &kp Q  &kp W     &kp E    &kp R    &kp T                      &kp Y    &kp U    &kp I     &kp O    &kp P    &kp EQUAL
&kp LCTRL &kp A  &kp S     &kp D    &kp F    &kp G                      &kp H    &kp J    &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X     &kp C    &kp V    &kp B   &none      &none   &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &none &none &kp LALT  &kp SPACE &lt 1 BSPC &lt 2 DEL &kp RET &kp RGUI &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | F_TERM| BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
F_TERM     &kp F1           &kp F2            &kp F3            &kp F4       &kp F5                       &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11
&trans     &pw1             &pw1              &pw1              PT_RUN       PT_TERM                      &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&kp GRAVE  &kp EXCL         &kp AT            &kp HASH          &kp DOLLAR   &kp PRCNT                    &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp TILDE
&trans     &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans       &trans    &trans   &trans    &trans    &kp MINUS &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE
                            &trans            &trans            &trans       &trans    &trans   &kp DEL   &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans
&kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &trans      &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &trans
&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH
                 &trans &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
